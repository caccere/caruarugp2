# number of data elements
547
# offset bytes value
0 2 0x8002 // magic 
2 2 0x0 // id
4 4 0x4e // scaleBegin 78
8 4 0x56 // scaleEnd 86
12 4 0x5a // textureBegin 90
16 4 0x15e // pointsBegin 350
20 4 0x1ce // vertexBegin 462
24 4 0x136 // textureEnd 310
28 4 0x21a // vertexEnd 538
32 4 0x45a // fileEnd 1114
36 4 0x45a // fileEnd2 1114
40 4 0x0 // always0 
44 4 0x18000 // always1 
48 2 0x1 // unknown? 
50 2 0x8 // size 
52 2 0x70 // size8 
54 2 0xd // unknown data squence possible importance 
56 2 0xffff // unknown data squence possible importance 
58 2 0x7fff // unknown data squence possible importance 
60 2 0x3ae // unknown data squence possible importance 
62 2 0x0 // unknown data squence possible importance 
64 2 0x0 // unknown data squence possible importance 
66 2 0xaaa // unknown data squence possible importance 
68 2 0x30 // unknown data squence possible importance 
70 2 0x30 // unknown data squence possible importance 
72 2 0x3800 // unknown data squence possible importance 
74 2 0x68 // unknown data squence possible importance 
76 2 0x68 // unknown data squence possible importance 
78 2 0x19c4 // scale[0] 
80 2 0x800 // scale[1] 
82 2 0x1ac4 // scale[2] 
84 2 0x0 // scale[3] 
86 2 0xb0d // Unknown DANGER! 
88 2 0xff // Unknown DANGER! 
90 2 0x0 // Texture Cmd numl
92 2 0x10 // Texture Cmd cmd
94 2 0xb6 // Texture Cmd[0] Arg[0] = Texture
96 2 0x3 // Texture Cmd[0] Arg[1] = Rotation
98 2 0xffff // Texture Cmd[0] Arg[2] = Vertex
100 2 0x2 // Texture Cmd[0] Arg[3] = Vertex
102 2 0x3 // Texture Cmd[0] Arg[4] = Vertex
104 2 0xfffc // Texture Cmd[0] Arg[5] = Vertex
106 2 0x0 // Texture Cmd[0] Arg[6] = Terminator
108 2 0x1 // Texture Cmd numl
110 2 0x10 // Texture Cmd cmd
112 2 0xb6 // Texture Cmd[1] Arg[0] = Texture
114 2 0x3 // Texture Cmd[1] Arg[1] = Rotation
116 2 0x1 // Texture Cmd[1] Arg[2] = Vertex
118 2 0x4 // Texture Cmd[1] Arg[3] = Vertex
120 2 0xfffd // Texture Cmd[1] Arg[4] = Vertex
122 2 0xfffe // Texture Cmd[1] Arg[5] = Vertex
124 2 0x0 // Texture Cmd[1] Arg[6] = Terminator
126 2 0x2 // Texture Cmd numl
128 2 0x10 // Texture Cmd cmd
130 2 0x47 // Texture Cmd[2] Arg[0] = Texture
132 2 0x3 // Texture Cmd[2] Arg[1] = Rotation
134 2 0xfffb // Texture Cmd[2] Arg[2] = Vertex
136 2 0x6 // Texture Cmd[2] Arg[3] = Vertex
138 2 0x7 // Texture Cmd[2] Arg[4] = Vertex
140 2 0xfffe // Texture Cmd[2] Arg[5] = Vertex
142 2 0x0 // Texture Cmd[2] Arg[6] = Terminator
144 2 0x3 // Texture Cmd numl
146 2 0x10 // Texture Cmd cmd
148 2 0x47 // Texture Cmd[3] Arg[0] = Texture
150 2 0x3 // Texture Cmd[3] Arg[1] = Rotation
152 2 0xfff9 // Texture Cmd[3] Arg[2] = Vertex
154 2 0xfffa // Texture Cmd[3] Arg[3] = Vertex
156 2 0x5 // Texture Cmd[3] Arg[4] = Vertex
158 2 0x2 // Texture Cmd[3] Arg[5] = Vertex
160 2 0x0 // Texture Cmd[3] Arg[6] = Terminator
162 2 0x4 // Texture Cmd numl
164 2 0x10 // Texture Cmd cmd
166 2 0x47 // Texture Cmd[4] Arg[0] = Texture
168 2 0x3 // Texture Cmd[4] Arg[1] = Rotation
170 2 0xfff8 // Texture Cmd[4] Arg[2] = Vertex
172 2 0xfff7 // Texture Cmd[4] Arg[3] = Vertex
174 2 0xa // Texture Cmd[4] Arg[4] = Vertex
176 2 0x4 // Texture Cmd[4] Arg[5] = Vertex
178 2 0x0 // Texture Cmd[4] Arg[6] = Terminator
180 2 0x5 // Texture Cmd numl
182 2 0x10 // Texture Cmd cmd
184 2 0x47 // Texture Cmd[5] Arg[0] = Texture
186 2 0x3 // Texture Cmd[5] Arg[1] = Rotation
188 2 0xfff6 // Texture Cmd[5] Arg[2] = Vertex
190 2 0x9 // Texture Cmd[5] Arg[3] = Vertex
192 2 0x8 // Texture Cmd[5] Arg[4] = Vertex
194 2 0xfffc // Texture Cmd[5] Arg[5] = Vertex
196 2 0x0 // Texture Cmd[5] Arg[6] = Terminator
198 2 0x6 // Texture Cmd numl
200 2 0x1a // Texture Cmd cmd
202 2 0x70 // Texture Cmd[6] Arg[0] = Texture
204 2 0x83 // Texture Cmd[6] Arg[1] = Rotation
206 2 0x1 // Texture Cmd[6] Arg[2] = Num Flag Identifier
208 2 0x200 // Texture Cmd[6] Arg[3] = Horizontal Repeat (A)
210 2 0x100 // Texture Cmd[6] Arg[4] = Vertical Repeat (B)
212 2 0xfff5 // Texture Cmd[6] Arg[5] = Vertex
214 2 0xfff4 // Texture Cmd[6] Arg[6] = Vertex
216 2 0xfffa // Texture Cmd[6] Arg[7] = Vertex
218 2 0x8000 // Texture Cmd[6] Arg[8] = Vertex
220 2 0xd // Texture Cmd[6] Arg[9] = Vertex
222 2 0xe // Texture Cmd[6] Arg[10] = Vertex
224 2 0x0 // Texture Cmd[6] Arg[11] = Terminator
226 2 0x7 // Texture Cmd numl
228 2 0x1a // Texture Cmd cmd
230 2 0x70 // Texture Cmd[7] Arg[0] = Texture
232 2 0x83 // Texture Cmd[7] Arg[1] = Rotation
234 2 0x1 // Texture Cmd[7] Arg[2] = Num Flag Identifier
236 2 0x200 // Texture Cmd[7] Arg[3] = Horizontal Repeat (A)
238 2 0x100 // Texture Cmd[7] Arg[4] = Vertical Repeat (B)
240 2 0xfff3 // Texture Cmd[7] Arg[5] = Vertex
242 2 0x8000 // Texture Cmd[7] Arg[6] = Vertex
244 2 0x6 // Texture Cmd[7] Arg[7] = Vertex
246 2 0xc // Texture Cmd[7] Arg[8] = Vertex
248 2 0xb // Texture Cmd[7] Arg[9] = Vertex
250 2 0xfff2 // Texture Cmd[7] Arg[10] = Vertex
252 2 0x0 // Texture Cmd[7] Arg[11] = Terminator
254 2 0x8 // Texture Cmd numl
256 2 0x1a // Texture Cmd cmd
258 2 0x70 // Texture Cmd[8] Arg[0] = Texture
260 2 0x83 // Texture Cmd[8] Arg[1] = Rotation
262 2 0x1 // Texture Cmd[8] Arg[2] = Num Flag Identifier
264 2 0x200 // Texture Cmd[8] Arg[3] = Horizontal Repeat (A)
266 2 0x100 // Texture Cmd[8] Arg[4] = Vertical Repeat (B)
268 2 0xfff1 // Texture Cmd[8] Arg[5] = Vertex
270 2 0x8000 // Texture Cmd[8] Arg[6] = Vertex
272 2 0x9 // Texture Cmd[8] Arg[7] = Vertex
274 2 0x10 // Texture Cmd[8] Arg[8] = Vertex
276 2 0x11 // Texture Cmd[8] Arg[9] = Vertex
278 2 0xffee // Texture Cmd[8] Arg[10] = Vertex
280 2 0x0 // Texture Cmd[8] Arg[11] = Terminator
282 2 0x9 // Texture Cmd numl
284 2 0x1a // Texture Cmd cmd
286 2 0x70 // Texture Cmd[9] Arg[0] = Texture
288 2 0x83 // Texture Cmd[9] Arg[1] = Rotation
290 2 0x1 // Texture Cmd[9] Arg[2] = Num Flag Identifier
292 2 0x200 // Texture Cmd[9] Arg[3] = Horizontal Repeat (A)
294 2 0x100 // Texture Cmd[9] Arg[4] = Vertical Repeat (B)
296 2 0xffef // Texture Cmd[9] Arg[5] = Vertex
298 2 0xfff0 // Texture Cmd[9] Arg[6] = Vertex
300 2 0xfff7 // Texture Cmd[9] Arg[7] = Vertex
302 2 0x8000 // Texture Cmd[9] Arg[8] = Vertex
304 2 0xf // Texture Cmd[9] Arg[9] = Vertex
306 2 0x12 // Texture Cmd[9] Arg[10] = Vertex
308 2 0x0 // Texture Cmd[9] Arg[11] = Terminator
310 2 0x1 // unknown (always 1)[0] 
312 2 0x0 // unknown (always 0)[0] 
314 2 0x1 // unknown (always 1)[1] 
316 2 0x0 // unknown (always 0)[1] 
318 2 0x1 // unknown (always 1)[2] 
320 2 0x0 // unknown (always 0)[2] 
322 2 0x1 // unknown (always 1)[3] 
324 2 0x0 // unknown (always 0)[3] 
326 2 0x1 // unknown (always 1)[4] 
328 2 0x0 // unknown (always 0)[4] 
330 2 0x1 // unknown (always 1)[5] 
332 2 0x0 // unknown (always 0)[5] 
334 2 0x1 // unknown (always 1)[6] 
336 2 0x0 // unknown (always 0)[6] 
338 2 0x1 // unknown (always 1)[7] 
340 2 0x0 // unknown (always 0)[7] 
342 2 0x1 // unknown (always 1)[8] 
344 2 0x0 // unknown (always 0)[8] 
346 2 0x1 // unknown (always 1)[9] 
348 2 0x0 // unknown (always 0)[9] 
350 2 0x84 // pt[0].x 
352 2 0x0 // pt[0].y 
354 2 0x36a // pt[0].z 
356 2 0x0 // data padding 
358 2 0x4 // pt[1].x 
360 2 0x0 // pt[1].y 
362 2 0x36a // pt[1].z 
364 2 0x0 // data padding 
366 2 0x88 // pt[2].x 
368 2 0x0 // pt[2].y 
370 2 0x400 // pt[2].z 
372 2 0x0 // data padding 
374 2 0x8 // pt[3].x 
376 2 0x0 // pt[3].y 
378 2 0x400 // pt[3].z 
380 2 0x0 // data padding 
382 2 0x8000 // pt[4].x 
384 2 0x0 // pt[4].y 
386 2 0x696 // pt[4].z 
388 2 0x0 // data padding 
390 2 0x8001 // pt[5].x 
392 2 0x0 // pt[5].y 
394 2 0x696 // pt[5].z 
396 2 0x0 // data padding 
398 2 0x8002 // pt[6].x 
400 2 0x0 // pt[6].y 
402 2 0x600 // pt[6].z 
404 2 0x0 // data padding 
406 2 0x8003 // pt[7].x 
408 2 0x0 // pt[7].y 
410 2 0x600 // pt[7].z 
412 2 0x0 // data padding 
414 2 0x8000 // pt[8].x 
416 2 0x0 // pt[8].y 
418 2 0x0 // pt[8].z 
420 2 0x0 // data padding 
422 2 0x8001 // pt[9].x 
424 2 0x0 // pt[9].y 
426 2 0x0 // pt[9].z 
428 2 0x0 // data padding 
430 2 0x8c // pt[10].x 
432 2 0x0 // pt[10].y 
434 2 0x696 // pt[10].z 
436 2 0x0 // data padding 
438 2 0x800a // pt[11].x 
440 2 0x0 // pt[11].y 
442 2 0x0 // pt[11].z 
444 2 0x0 // data padding 
446 2 0xc // pt[12].x 
448 2 0x0 // pt[12].y 
450 2 0x696 // pt[12].z 
452 2 0x0 // data padding 
454 2 0x800c // pt[13].x 
456 2 0x0 // pt[13].y 
458 2 0x0 // pt[13].z 
460 2 0x0 // data padding 
462 2 0x0 // vertext data[0] (0 -> 0) 
464 2 0x0 // vertex data padding 
466 2 0x302 // vertext data[1] (2 -> 3) 
468 2 0x0 // vertex data padding 
470 2 0x602 // vertext data[2] (2 -> 6) 
472 2 0x0 // vertex data padding 
474 2 0x706 // vertext data[3] (6 -> 7) 
476 2 0x0 // vertex data padding 
478 2 0x703 // vertext data[4] (3 -> 7) 
480 2 0x0 // vertex data padding 
482 2 0x200 // vertext data[5] (0 -> 2) 
484 2 0x0 // vertex data padding 
486 2 0x400 // vertext data[6] (0 -> 4) 
488 2 0x0 // vertex data padding 
490 2 0x604 // vertext data[7] (4 -> 6) 
492 2 0x0 // vertex data padding 
494 2 0x705 // vertext data[8] (5 -> 7) 
496 2 0x0 // vertex data padding 
498 2 0x501 // vertext data[9] (1 -> 5) 
500 2 0x0 // vertex data padding 
502 2 0x301 // vertext data[10] (1 -> 3) 
504 2 0x0 // vertex data padding 
506 2 0xb0a // vertext data[11] (10 -> 11) 
508 2 0x0 // vertex data padding 
510 2 0xa04 // vertext data[12] (4 -> 10) 
512 2 0x0 // vertex data padding 
514 2 0x800 // vertext data[13] (0 -> 8) 
516 2 0x0 // vertex data padding 
518 2 0xb08 // vertext data[14] (8 -> 11) 
520 2 0x0 // vertex data padding 
522 2 0x901 // vertext data[15] (1 -> 9) 
524 2 0x0 // vertex data padding 
526 2 0xc05 // vertext data[16] (5 -> 12) 
528 2 0x0 // vertex data padding 
530 2 0xd0c // vertext data[17] (12 -> 13) 
532 2 0x0 // vertex data padding 
534 2 0xd09 // vertext data[18] (9 -> 13) 
536 2 0x0 // vertex data padding 
538 2 0x8 // unknown data[0] 
540 2 0x1e // unknown data[1] 
542 2 0x34 // unknown data[2] 
544 2 0x4a // unknown data[3] 
546 2 0x6c // unknown data[4] 
548 2 0x88 // unknown data[5] 
550 2 0x24 // unknown data[6] 
552 2 0x36 // unknown data[7] 
554 2 0x0 // unknown data[8] 
556 2 0x12 // unknown data[9] 
558 2 0x48 // unknown data[10] 
560 2 0x5a // unknown data[11] 
562 2 0xa4 // unknown data[12] 
564 2 0xc0 // unknown data[13] 
566 2 0x8000 // unknown data[14] 
568 2 0x6c // unknown data[15] 
570 2 0x88 // unknown data[16] 
572 2 0x24 // unknown data[17] 
574 2 0x36 // unknown data[18] 
576 2 0x12 // unknown data[19] 
578 2 0x0 // unknown data[20] 
580 2 0x48 // unknown data[21] 
582 2 0x5a // unknown data[22] 
584 2 0xa4 // unknown data[23] 
586 2 0xc0 // unknown data[24] 
588 2 0x8000 // unknown data[25] 
590 2 0xc0 // unknown data[26] 
592 2 0xa4 // unknown data[27] 
594 2 0x5a // unknown data[28] 
596 2 0x48 // unknown data[29] 
598 2 0x12 // unknown data[30] 
600 2 0x0 // unknown data[31] 
602 2 0x36 // unknown data[32] 
604 2 0x24 // unknown data[33] 
606 2 0x88 // unknown data[34] 
608 2 0x6c // unknown data[35] 
610 2 0x8000 // unknown data[36] 
612 2 0xa4 // unknown data[37] 
614 2 0xc0 // unknown data[38] 
616 2 0x5a // unknown data[39] 
618 2 0x48 // unknown data[40] 
620 2 0x0 // unknown data[41] 
622 2 0x12 // unknown data[42] 
624 2 0x36 // unknown data[43] 
626 2 0x24 // unknown data[44] 
628 2 0x6c // unknown data[45] 
630 2 0x88 // unknown data[46] 
632 2 0x8000 // unknown data[47] 
634 2 0x8 // unknown data[48] 
636 2 0x1e // unknown data[49] 
638 2 0x34 // unknown data[50] 
640 2 0x4a // unknown data[51] 
642 2 0x6c // unknown data[52] 
644 2 0x88 // unknown data[53] 
646 2 0x24 // unknown data[54] 
648 2 0x36 // unknown data[55] 
650 2 0x0 // unknown data[56] 
652 2 0x12 // unknown data[57] 
654 2 0x48 // unknown data[58] 
656 2 0x5a // unknown data[59] 
658 2 0xa4 // unknown data[60] 
660 2 0xc0 // unknown data[61] 
662 2 0x8000 // unknown data[62] 
664 2 0x6c // unknown data[63] 
666 2 0x88 // unknown data[64] 
668 2 0x24 // unknown data[65] 
670 2 0x36 // unknown data[66] 
672 2 0x12 // unknown data[67] 
674 2 0x0 // unknown data[68] 
676 2 0x48 // unknown data[69] 
678 2 0x5a // unknown data[70] 
680 2 0xa4 // unknown data[71] 
682 2 0xc0 // unknown data[72] 
684 2 0x8000 // unknown data[73] 
686 2 0xc0 // unknown data[74] 
688 2 0xa4 // unknown data[75] 
690 2 0x5a // unknown data[76] 
692 2 0x48 // unknown data[77] 
694 2 0x12 // unknown data[78] 
696 2 0x0 // unknown data[79] 
698 2 0x36 // unknown data[80] 
700 2 0x24 // unknown data[81] 
702 2 0x88 // unknown data[82] 
704 2 0x6c // unknown data[83] 
706 2 0x8000 // unknown data[84] 
708 2 0xa4 // unknown data[85] 
710 2 0xc0 // unknown data[86] 
712 2 0x5a // unknown data[87] 
714 2 0x48 // unknown data[88] 
716 2 0x0 // unknown data[89] 
718 2 0x12 // unknown data[90] 
720 2 0x36 // unknown data[91] 
722 2 0x24 // unknown data[92] 
724 2 0x6c // unknown data[93] 
726 2 0x88 // unknown data[94] 
728 2 0x8000 // unknown data[95] 
730 2 0x8 // unknown data[96] 
732 2 0x1e // unknown data[97] 
734 2 0x34 // unknown data[98] 
736 2 0x4a // unknown data[99] 
738 2 0x6c // unknown data[100] 
740 2 0x88 // unknown data[101] 
742 2 0x36 // unknown data[102] 
744 2 0x24 // unknown data[103] 
746 2 0x0 // unknown data[104] 
748 2 0x12 // unknown data[105] 
750 2 0x48 // unknown data[106] 
752 2 0xa4 // unknown data[107] 
754 2 0xc0 // unknown data[108] 
756 2 0x5a // unknown data[109] 
758 2 0x8000 // unknown data[110] 
760 2 0x6c // unknown data[111] 
762 2 0x88 // unknown data[112] 
764 2 0x36 // unknown data[113] 
766 2 0x24 // unknown data[114] 
768 2 0x12 // unknown data[115] 
770 2 0x0 // unknown data[116] 
772 2 0x48 // unknown data[117] 
774 2 0xa4 // unknown data[118] 
776 2 0xc0 // unknown data[119] 
778 2 0x5a // unknown data[120] 
780 2 0x8000 // unknown data[121] 
782 2 0xc0 // unknown data[122] 
784 2 0xa4 // unknown data[123] 
786 2 0x5a // unknown data[124] 
788 2 0x48 // unknown data[125] 
790 2 0x12 // unknown data[126] 
792 2 0x0 // unknown data[127] 
794 2 0x36 // unknown data[128] 
796 2 0x24 // unknown data[129] 
798 2 0x88 // unknown data[130] 
800 2 0x6c // unknown data[131] 
802 2 0x8000 // unknown data[132] 
804 2 0xa4 // unknown data[133] 
806 2 0xc0 // unknown data[134] 
808 2 0x5a // unknown data[135] 
810 2 0x48 // unknown data[136] 
812 2 0x0 // unknown data[137] 
814 2 0x12 // unknown data[138] 
816 2 0x36 // unknown data[139] 
818 2 0x24 // unknown data[140] 
820 2 0x6c // unknown data[141] 
822 2 0x88 // unknown data[142] 
824 2 0x8000 // unknown data[143] 
826 2 0x8 // unknown data[144] 
828 2 0x1e // unknown data[145] 
830 2 0x34 // unknown data[146] 
832 2 0x4a // unknown data[147] 
834 2 0x6c // unknown data[148] 
836 2 0x88 // unknown data[149] 
838 2 0x24 // unknown data[150] 
840 2 0x36 // unknown data[151] 
842 2 0x0 // unknown data[152] 
844 2 0x12 // unknown data[153] 
846 2 0x48 // unknown data[154] 
848 2 0x5a // unknown data[155] 
850 2 0xa4 // unknown data[156] 
852 2 0xc0 // unknown data[157] 
854 2 0x8000 // unknown data[158] 
856 2 0x6c // unknown data[159] 
858 2 0x88 // unknown data[160] 
860 2 0x24 // unknown data[161] 
862 2 0x36 // unknown data[162] 
864 2 0x12 // unknown data[163] 
866 2 0x0 // unknown data[164] 
868 2 0x48 // unknown data[165] 
870 2 0x5a // unknown data[166] 
872 2 0xa4 // unknown data[167] 
874 2 0xc0 // unknown data[168] 
876 2 0x8000 // unknown data[169] 
878 2 0xc0 // unknown data[170] 
880 2 0xa4 // unknown data[171] 
882 2 0x5a // unknown data[172] 
884 2 0x48 // unknown data[173] 
886 2 0x12 // unknown data[174] 
888 2 0x0 // unknown data[175] 
890 2 0x36 // unknown data[176] 
892 2 0x24 // unknown data[177] 
894 2 0x88 // unknown data[178] 
896 2 0x6c // unknown data[179] 
898 2 0x8000 // unknown data[180] 
900 2 0xa4 // unknown data[181] 
902 2 0xc0 // unknown data[182] 
904 2 0x5a // unknown data[183] 
906 2 0x48 // unknown data[184] 
908 2 0x0 // unknown data[185] 
910 2 0x12 // unknown data[186] 
912 2 0x36 // unknown data[187] 
914 2 0x24 // unknown data[188] 
916 2 0x6c // unknown data[189] 
918 2 0x88 // unknown data[190] 
920 2 0x8000 // unknown data[191] 
922 2 0x8 // unknown data[192] 
924 2 0x1e // unknown data[193] 
926 2 0x34 // unknown data[194] 
928 2 0x4a // unknown data[195] 
930 2 0x6c // unknown data[196] 
932 2 0x88 // unknown data[197] 
934 2 0x24 // unknown data[198] 
936 2 0x36 // unknown data[199] 
938 2 0x0 // unknown data[200] 
940 2 0x12 // unknown data[201] 
942 2 0x48 // unknown data[202] 
944 2 0x5a // unknown data[203] 
946 2 0xa4 // unknown data[204] 
948 2 0xc0 // unknown data[205] 
950 2 0x8000 // unknown data[206] 
952 2 0x6c // unknown data[207] 
954 2 0x88 // unknown data[208] 
956 2 0x24 // unknown data[209] 
958 2 0x36 // unknown data[210] 
960 2 0x12 // unknown data[211] 
962 2 0x0 // unknown data[212] 
964 2 0x48 // unknown data[213] 
966 2 0x5a // unknown data[214] 
968 2 0xa4 // unknown data[215] 
970 2 0xc0 // unknown data[216] 
972 2 0x8000 // unknown data[217] 
974 2 0xc0 // unknown data[218] 
976 2 0xa4 // unknown data[219] 
978 2 0x5a // unknown data[220] 
980 2 0x48 // unknown data[221] 
982 2 0x12 // unknown data[222] 
984 2 0x0 // unknown data[223] 
986 2 0x36 // unknown data[224] 
988 2 0x24 // unknown data[225] 
990 2 0x88 // unknown data[226] 
992 2 0x6c // unknown data[227] 
994 2 0x8000 // unknown data[228] 
996 2 0xa4 // unknown data[229] 
998 2 0xc0 // unknown data[230] 
1000 2 0x5a // unknown data[231] 
1002 2 0x48 // unknown data[232] 
1004 2 0x0 // unknown data[233] 
1006 2 0x12 // unknown data[234] 
1008 2 0x36 // unknown data[235] 
1010 2 0x24 // unknown data[236] 
1012 2 0x6c // unknown data[237] 
1014 2 0x88 // unknown data[238] 
1016 2 0x8000 // unknown data[239] 
1018 2 0x8 // unknown data[240] 
1020 2 0x1e // unknown data[241] 
1022 2 0x34 // unknown data[242] 
1024 2 0x4a // unknown data[243] 
1026 2 0x6c // unknown data[244] 
1028 2 0x88 // unknown data[245] 
1030 2 0x36 // unknown data[246] 
1032 2 0x24 // unknown data[247] 
1034 2 0x0 // unknown data[248] 
1036 2 0x12 // unknown data[249] 
1038 2 0x48 // unknown data[250] 
1040 2 0xa4 // unknown data[251] 
1042 2 0xc0 // unknown data[252] 
1044 2 0x5a // unknown data[253] 
1046 2 0x8000 // unknown data[254] 
1048 2 0x6c // unknown data[255] 
1050 2 0x88 // unknown data[256] 
1052 2 0x36 // unknown data[257] 
1054 2 0x24 // unknown data[258] 
1056 2 0x12 // unknown data[259] 
1058 2 0x0 // unknown data[260] 
1060 2 0x48 // unknown data[261] 
1062 2 0xa4 // unknown data[262] 
1064 2 0xc0 // unknown data[263] 
1066 2 0x5a // unknown data[264] 
1068 2 0x8000 // unknown data[265] 
1070 2 0xc0 // unknown data[266] 
1072 2 0xa4 // unknown data[267] 
1074 2 0x5a // unknown data[268] 
1076 2 0x48 // unknown data[269] 
1078 2 0x12 // unknown data[270] 
1080 2 0x0 // unknown data[271] 
1082 2 0x36 // unknown data[272] 
1084 2 0x24 // unknown data[273] 
1086 2 0x88 // unknown data[274] 
1088 2 0x6c // unknown data[275] 
1090 2 0x8000 // unknown data[276] 
1092 2 0xa4 // unknown data[277] 
1094 2 0xc0 // unknown data[278] 
1096 2 0x5a // unknown data[279] 
1098 2 0x48 // unknown data[280] 
1100 2 0x0 // unknown data[281] 
1102 2 0x12 // unknown data[282] 
1104 2 0x36 // unknown data[283] 
1106 2 0x24 // unknown data[284] 
1108 2 0x6c // unknown data[285] 
1110 2 0x88 // unknown data[286] 
1112 2 0x8000 // unknown data[287] 
1114 2 0x0 // Terminator 
##JAM_TEXTURES 1
##JAM_FILE 0 0 gamejams\adverts1.jam##JAM_FILE